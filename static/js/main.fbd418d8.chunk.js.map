{"version":3,"sources":["Components/Utils/Colors.js","Components/TouchableOpacity.js","Components/Category.js","Components/Container.js","App.js","reportWebVitals.js","index.js"],"names":["TouchableOpacity","children","onPress","styleName","useState","touched","state","setState","className","onMouseDown","prevState","onMouseUp","setTimeout","Category","name","plus","layout","LeftLayout","console","log","color","size","RightLayout","newItem","e","key","lineCount","keyCode","preventDefault","newItemCheck","map","subCards","idx","style","backgroundColor","Colors","value","placeholder","aria-label","onChange","userInput","newState","updateItem","target","onKeyDown","indexToDelete","filter","item","Container","WentWell","setWentWell","ToImprove","setToImprove","ActionItems","setActionItems","WentWellItems","setWentWellItems","ToImproveItems","setToImproveItems","ActionItemsItems","setActionItemsItems","setLayout","items","setItems","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbd418d8.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nexport default {\n  primary: \"#2163F6\",\n  secondary: \"#E9446A\",\n  black: \"#222222\",\n  darkBlack: \"#000000\",\n  lightBlack: \"#121212\",\n  white: \"#ffffff\",\n  ghostWhite: \"#f8f8ff\",\n  lightGrey: \"#f9f9f9\",\n  mediumGrey: \"#6e6869\",\n  red: \"#e92c64\",\n  green: \"#009886\",\n  purple: \"#a63eb9\",\n  inactive: \"#666666\",\n  tint: \"#fdfae4\",\n};\n","import React, { useState } from \"react\";\n\nconst TouchableOpacity = ({ children, onPress, styleName }) => {\n  const [state, setState] = useState({\n    touched: false,\n  });\n\n  const toggleTouched = () => {\n    setState((prevState) => ({\n      ...prevState,\n      touched: !prevState.touched,\n    }));\n  };\n\n  const handleMouseUp = () => {\n    setTimeout(() => {\n      setState({ touched: false });\n    }, 50);\n    onPress();\n  };\n\n  const className = state.touched ? \"btn touched\" : \"btn\";\n  return (\n    <div className={styleName}>\n      <button\n        className={className}\n        onMouseDown={toggleTouched}\n        onMouseUp={handleMouseUp}\n      >\n        {children}\n      </button>\n    </div>\n  );\n};\n\nexport default TouchableOpacity;\n","import React from \"react\";\nimport \"../App.css\";\n// import RetroItem from \"./RetroItem\";\nimport Colors from \"./Utils/Colors\";\nimport {\n  ChevronDown,\n  ChevronLeft,\n  ChevronRight,\n  ChevronUp,\n  X,\n  Check,\n} from \"react-feather\";\nimport TouchableOpacity from \"./TouchableOpacity\";\n\nconst Category = ({\n  name,\n  plus,\n  state,\n  setState,\n  layout,\n}) => {\n \n  const DeleteItems = (indexToDelete) => {\n    setState([...state].filter((item, idx) => idx !== indexToDelete));\n  };\n\n  const LeftLayout = () => {\n    if (layout === \"Layout\") {\n      return (\n        <TouchableOpacity onPress={() => console.log(\"Left\")}>\n          <ChevronLeft color=\"white\" size={25} />\n        </TouchableOpacity>\n      );\n    } else if (layout === \"LayoutAlt\") {\n      return (\n        <TouchableOpacity onPress={() => console.log(\"Left\")}>\n          <ChevronDown color=\"white\" size={25} />\n        </TouchableOpacity>\n      );\n    }\n  };\n\n  const RightLayout = () => {\n    if (layout === \"Layout\") {\n      return (\n        <TouchableOpacity onPress={() => console.log(\"Right\")}>\n          <ChevronRight color=\"white\" size={25} />\n        </TouchableOpacity>\n      );\n    } else if (layout === \"LayoutAlt\") {\n      return (\n        <TouchableOpacity onPress={() => console.log(\"Right\")}>\n          <ChevronUp color=\"white\" size={25} />\n        </TouchableOpacity>\n      );\n    }\n  };\n\n  const newItem = (e) => {\n    if (e.key === \"Enter\") {\n      let lineCount = 0;\n      if (e.keyCode === 13) {\n        lineCount++;\n        setState([...state, \"\"]);\n      }\n      if (lineCount >= 1) {\n        e.preventDefault();\n        return false;\n      }\n    }\n  };\n  const newItemCheck = () => {\n    setState([...state, \"\"]);\n  };\n  const updateItem = (userInput, idx) => {\n    const newState = [...state];\n    newState[idx] = userInput;\n    setState(newState);\n  };\n\n  return (\n    <div>\n      <div>{name}</div>\n      <TouchableOpacity onPress={() => newItemCheck()} styleName=\"Plus\">\n        {plus}\n      </TouchableOpacity>\n      <div className=\"RST\">\n        {state.map((subCards, idx) => {\n          return (\n            <div\n              key={idx}\n              style={\n                name === \"Went Well\"\n                  ? { backgroundColor: Colors.green }\n                  : name === \"To Improve\"\n                  ? { backgroundColor: Colors.red }\n                  : name === \"Action Items\"\n                  ? { backgroundColor: Colors.purple }\n                  : {}\n              }\n            >\n              <div className=\"RSTItemText\">\n                <textarea\n                  value={subCards}\n                  placeholder=\"Enter text here\"\n                  aria-label=\"Enter text here\"\n                  onChange={(e) => updateItem(e.target.value, idx)}\n                  onKeyDown={newItem}\n                />\n                <TouchableOpacity onPress={newItemCheck}>\n                  <Check color=\"white\" size={15} />\n                </TouchableOpacity>\n              </div>\n              <div className=\"Lola\">\n                <LeftLayout />\n                <TouchableOpacity onPress={() => DeleteItems(idx)}>\n                  <X color=\"white\" size={25} />\n                </TouchableOpacity>\n                <RightLayout />\n              </div>\n              <p />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Category;\n","import React, { useState } from \"react\";\nimport Category from \"./Category\";\nimport \"../App.css\";\nimport TouchableOpacity from \"./TouchableOpacity\";\nimport { MoreHorizontal, MoreVertical } from \"react-feather\";\nimport Colors from \"./Utils/Colors\";\n\nconst Container = ({ name }) => {\n  const [WentWell, setWentWell] = useState([]);\n  const [ToImprove, setToImprove] = useState([]);\n  const [ActionItems, setActionItems] = useState([]);\n  const [WentWellItems, setWentWellItems] = useState(\"\");\n  const [ToImproveItems, setToImproveItems] = useState(\"\");\n  const [ActionItemsItems, setActionItemsItems] = useState(\"\");\n  const [layout, setLayout] = useState(\"Layout\");\n\n  return (\n    <div>\n      <div className=\"App\">\n        <div className=\"Title\">{name}</div>\n        <div className=\"Change-Layout\">\n          <div className=\"Title\">Layout</div>\n          <TouchableOpacity onPress={() => setLayout(\"Layout\")}>\n            <MoreHorizontal color={Colors.black} size={16} />\n          </TouchableOpacity>\n          <TouchableOpacity onPress={() => setLayout(\"LayoutAlt\")}>\n            <MoreVertical color={Colors.black} size={16} />\n          </TouchableOpacity>\n        </div>\n      </div>\n      <div className={layout}>\n        <Category\n          name=\"Went Well\"\n          plus=\"+\"\n          state={WentWell}\n          setState={setWentWell}\n          items={WentWellItems}\n          setItems={setWentWellItems}\n          layout={layout}\n          setLayout={setLayout}\n        />\n        <Category\n          name=\"To Improve\"\n          plus=\"+\"\n          state={ToImprove}\n          setState={setToImprove}\n          items={ToImproveItems}\n          setItems={setToImproveItems}\n          layout={layout}\n          setLayout={setLayout}\n        />\n        <Category\n          name=\"Action Items\"\n          plus=\"+\"\n          state={ActionItems}\n          setState={setActionItems}\n          items={ActionItemsItems}\n          setItems={setActionItemsItems}\n          layout={layout}\n          setLayout={setLayout}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Container;\n","import \"./App.css\";\nimport Container from \"./Components/Container\";\n\nfunction App() {\n  return (\n    <div>\n      <Container name=\"Retroboard\" />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}